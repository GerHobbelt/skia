on:
  push:
    branches:
      - "ckia*"
name: Build
env:
  DEFAULT_ARGS: >
    skia_enable_tools=false 
    skia_enable_fontmgr_custom_directory=true
    skia_enable_fontmgr_custom_embedded=true
    skia_enable_fontmgr_custom_empty=true
    skia_enable_skottie=true
    cc="clang" 
    cc_wrapper="sccache" 
    cxx="clang++" 
    clang_win="C:\\Program Files\\LLVM" 
    clang_win_version="16" 
    skia_use_system_expat=false 
    skia_use_system_freetype2=false 
    skia_use_system_harfbuzz=false 
    skia_use_system_icu=false 
    skia_use_system_libjpeg_turbo=false 
    skia_use_system_libpng=false 
    skia_use_system_libwebp=false 
    skia_use_system_zlib=false 
    extra_asmflags=[] extra_cflags=[] extra_cflags_c=[] extra_cflags_cc=[] extra_ldflags=[]
jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        profile: [release, debug]
        libtype: [static, shared]
        os: [ubuntu, windows]
        exclude:
          - libtype: shared # shared libs on windows has some error with dll import/export in skottie
            os: windows

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Run sccache-cache # to speedup skia compilation
        uses: mozilla-actions/sccache-action@v0.0.3
        
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      
      - name: Install Deps on Linux
        if: matrix.os == 'ubuntu'
        shell: bash
        run: ./tools/install_dependencies.sh

      - name: Remove Useless Sources
        run: python ckia/rm_useless_src.py

      - name: Build and Archive Libs
        shell: bash
        env:
          args: 
          TARGET: ${{matrix.os == 'ubuntu' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}
          TARGET_ARGS: ${{matrix.os == 'ubuntu' && 'skia_use_egl=true extra_cflags_cc+=["-frtti"]' || 'extra_cflags+=["-DSK_FONT_HOST_USE_SYSTEM_SETTINGS"]'}}
          USE_VULKAN: 'skia_use_vulkan=true'
          IS_OFFICIAL_BUILD: is_official_build=${{matrix.profile == 'release' && 'true' || 'false'}}
          IS_COMPONENT_BUILD: is_component_build=${{matrix.libtype == 'shared' && 'true' || 'false'}}
        run: bash ./ckia/build_skia.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: matrix.profile == 'release'
        with:
          name: ${{matrix.libtype}}-${{matrix.os}}.zip
          retention-days: 7
          path: 'out/*.tar.gz'